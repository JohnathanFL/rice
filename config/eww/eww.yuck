(defwidget bar []
  (centerbox :orientation "h"
    (workspaces)
    (music)
    (sidestuff)))

(defwidget sidestuff []
  (box :class "sidestuff" :orientation "h" :space-evenly false :halign "end"
    ; (metric :label ""
    ;         :value {EWW_RAM.used_mem_perc}
    ;         :onchange "")
    (label :text {formattime(EWW_TIME, "%Y-%m-%d %H:%M:%S")})
  )
)

(deflisten workspaces :initial "[]" "~/.config/eww/scripts/get-workspaces")
(defwidget workspaces []
  (eventbox :class "workspaces-widget"
    (box :class "workspaces" :halign "start" :spacing 10
      ; TODO: Wtf does this do and why does highlighting based on current_workspace not work without it?
      ;(label :text "${workspaces}${current_workspace}" :visible false)
      (for workspace in workspaces
        (button
          :onclick "hyprctl dispatch workspace ${workspace.name}"
          :class "workspace-entry ${workspace.focused ? "current" : ""} ${workspace.filled ? "occupied" : "empty"}"
          (label :text "${workspace.name}" :visible {workspace.filled || workspace.focused})
        )
      )
    )
  )
)

(defwidget music []
  (box :class "music"
       :orientation "h"
       :space-evenly false
       :halign "center"
    {"${music}"}))


(defwidget metric [label value onchange]
  (box :orientation "h"
       :class "metric"
       :space-evenly false
    (box :class "label" label)
    (label :text "${value}%")
    (scale :min 0
           :max 101
           :active {onchange != ""}
           :value value
           :onchange onchange)))



(deflisten music :initial ""
  "mpd-follow-current || true")

(defpoll time :interval "1s"
  "date '+%H:%M:%S %b %d, %Y'")

(defwindow bar
  :monitor 0
  :windowtype "dock"
  :geometry (geometry :x "0%"
                      :y "10px"
                      :width "50%"
                      :height "2.5%"
                      :anchor "top center"
  )
  :exclusive true
  :stacking "fg"
  ;:reserve (struts :side "top" :distance "20%")
  :windowtype "dock"
  :wm-ignore false
  (bar))
