source "%val{config}/plugins/plug.kak/rc/plug.kak"
plug "occivink/kakoune-roguelight"
plug "andreyorst/powerline.kak" defer powerline %{
  colorscheme monokai
  powerline-theme default
  powerline-separator curve
  powerline-format git bufname line_column mode_info filetype client session position
} config %{
  powerline-start
}
plug "Delapouite/kakoune-buffers"
plug "alexherbo2/auto-pairs.kak"
plug "Delapouite/kakoune-livedown"
plug "andreyorst/smarttab.kak" defer smarttab  %{
  set global softtabstop 2
  set global tabstop 2
  set global indentwidth 2
  expandtab
} config %{
  hook global WinSetOption filetype=(json|python|ligi|rust|c|sql|cpp|kak|sh|zig|nim|java|javascript|css|html|php|plain|markdown|fish|go) expandtab
  hook global WinSetOption filetype=(makefile) noexpandtab


}
plug "andreyorst/fzf.kak" config %{
  require-module kitty
  set-option global kitty_window_type 'os'
} defer fzf %{
  set-option global fzf_terminal_command 'kitty-terminal  kak -c %val{session} -e "%arg{@}"'
}
plug "danr/kakoune-easymotion" config %{
  map global normal ^ f
  map global normal f ':enter-user-mode easymotion<ret>'
}
plug "occivink/kakoune-sudo-write"
plug "andreyorst/kaktree" defer kaktree %{
  set-option global kaktree_double_click_duration '0.5'
  set-option global kaktree_indentation 1
  set-option global kaktree_dir_icon_open  '‚ñæ üóÅ '
  set-option global kaktree_dir_icon_close '‚ñ∏ üóÄ '
  set-option global kaktree_file_icon      '‚†Ä‚†Äüñ∫'
} config %{
  kaktree-enable
}



map global normal <c-p> ': fzf-mode<ret>'

set global ui_options ncurses_assistant=none ncurses_set_title=false
set global scrolloff 5,5 # Keep 5 lines below/above the cursor
add-highlighter global/ number-lines

add-highlighter global/ regex TODO 0:todo_face

map global normal ^ q
map global normal <a-^> Q
map global normal q b
map global normal Q B
map global normal <a-q> <a-b>
map global normal <a-Q> <a-B>
map global normal b ':enter-buffers-mode<ret>'              -docstring 'buffers‚Ä¶'
map global normal B ':enter-user-mode -lock buffers<ret>'   -docstring 'buffers (lock)‚Ä¶'
map global normal <c-c> ':comment-line'
map global normal ^ <c-b>
map global normal <c-b> ':lsp-definition<ret>'

#map global insert <c-j> '<esc>ji'

hook global WinDisplay .* info-buffers

eval %sh{kak-lsp --kakoune -s $kak_session}
hook global WinSetOption filetype=(rust|python|go|javascript|typescript|c|cpp|html|js|css|json|php|nim) %{
  lsp-enable-window
}
hook global WinSetOption filetype=zig %{
  set buffer softtabstop 4
  set buffer tabstop 4
  set buffer indentwidth 4
  expandtab
  set window formatcmd 'zig fmt --color off --stdin'
  hook buffer BufWritePre .* %{format}
}

hook global InsertCompletionShow .* %{
  try %{
    execute-keys -draft 'h<a-K>\h<ret>'
    map window insert <tab> <c-n>
    map window insert <s-tab> <c-p>
  }
}
hook global InsertCompletionHide .* %{
  unmap window insert <tab> <c-n>
  unmap window insert <s-tab> <c-p>
}

hook global WinSetOption filetype=(cpp|c) %{
  clang-enable-autocomplete; clang-enable-diagnostics
}

hook global WinSetOption filetype=(html) %{ set window formatcmd 'pup -i 2 -p' }
hook global WinSetOption filetype=(python) %{
  set window formatcmd 'black -'
  set window indentwidth 4
}

hook global WinSetOption filetype=(go) %{
  set window formatcmd 'goimports'
  set window tabstop 2
}

hook global WinSetOption filetype=(c|cpp) %{
  set window formatcmd 'clang-format -style=file'
  hook buffer BufWritePre .* %{format}
}
hook global WinSetOption filetype=(sh|sway) %{ set window formatcmd 'shfmt -i 2 -sr -kp' }

add-highlighter global/ wrap -word -indent -width 100 -marker '‚î£' # Wraps lines

hook global WinCreate [^*]* %{
  editorconfig-load
  set-face buffer todo_face red,white+ufg
}

hook global WinSetOption filetype=ligi %{
  set buffer softtabstop 2
  set buffer tabstop 2
  set buffer indentwidth 2
}

set-option global lsp_server_configuration pyls.configurationSources=["flake8"]
